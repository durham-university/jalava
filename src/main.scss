// COLORS
@function myDesatComponent($color, $amount) {
  @return (($color/255.0)*(1.0-$amount)+$amount)*255.0;
}
@function myDesat($color, $amount){
  @return rgba( myDesatComponent(red($color), $amount), myDesatComponent(green($color), $amount), myDesatComponent(blue($color), $amount), alpha($color));
}

$color-primary: rgba(0,109,217,1);
$color-secondary: rgba(136,136,136,1);
$color-success: rgba(82,192,55,1);
$color-warning: rgba(171,154,17,1);
$color-error: rgba(219,94,63,1);
$color-link: $color-primary;
$color-light: rgba(230,230,230,1);
$color-divider: rgba(204,204,204,1);
$color-defaultText: rgba(51,51,51,1);
$color-dimText: rgba(102,102,102,1);
$color-dark: rgba(77,77,77,1);

@mixin bgColor($baseColor) {
  background-color: $baseColor;
  &.bgDesat { background-color: myDesat($baseColor, 0.5); }
  &.bgDesatHigh { background-color: myDesat($baseColor, 0.9); }
  &.bgAlpha { background-color: transparentize($baseColor, 0.5); }
  &.bgAlphaHigh { background-color: transparentize($baseColor, 0.8); }
  &.bgHoverOnly { background-color: transparent; }
  &.bgHover:hover, &.bgHoverOnly:hover {
    background-color: darken($baseColor, 20);
    &.bgDesat { background-color: myDesat($baseColor, 0.4); }
    &.bgDesatHigh { background-color: myDesat($baseColor, 0.8); }
    &.bgAlpha { background-color: transparentize($baseColor, 0.4); }
    &.bgAlphaHigh { background-color: transparentize($baseColor, 0.7); }
    }
}

@mixin textColor($baseColor){
  color: $baseColor;
  &.textDarken { color : darken($baseColor, 30); }
  &.textDarkenHigh { color : darken($baseColor, 50); }
  &.textHover:hover {
    color: darken($baseColor, 20);
    &.textDarken { color: darken($baseColor, 40); }
    &.textDarkenHigh { color: darken($baseColor, 60); }
  }
}

@mixin borderColor($baseColor){
  border-color: $baseColor;
  &.borderDarken { color : darken($baseColor, 50); }
}

.jalava-root {

  .bgPrimary { @include bgColor($color-primary); }
  .bgSecondary { @include bgColor($color-secondary); }
  .bgSuccess { @include bgColor($color-success); }
  .bgWarning { @include bgColor($color-warning); }
  .bgError { @include bgColor($color-error); }
  .bgLight { @include bgColor($color-light); }
  .bgDark { @include bgColor($color-dark); }
  .bgLink { @include bgColor($color-link); }
  .bgWhite { @include bgColor( rgba(255, 255, 255, 1.0)); }

  .textPrimary { @include textColor($color-primary); }
  .textSecondary { @include textColor($color-secondary); }
  .textSuccess { @include textColor($color-success); }
  .textWarning { @include textColor($color-warning); }
  .textError { @include textColor($color-error); }
  .textLink { @include textColor($color-link); }
  .textDefault { @include textColor($color-defaultText); }
  .textDim { @include textColor($color-dimText); }

  .borderPrimary { @include borderColor($color-primary); }
  .borderSecondary { @include borderColor($color-secondary); }
  .borderSuccess { @include borderColor($color-success); }
  .borderWarning { @include borderColor($color-warning); }
  .borderError { @include borderColor($color-error); }
  .borderLight { @include borderColor($color-light); }
  .borderDark { @include borderColor($color-dark); }

  color: $color-defaultText;

  padding: 0;
  margin: 0;

  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;

  // RESET

  *, & {
    padding: 0;
    margin: 0;
  }

  a { 
    color: $color-link; 
    &:hover { color: darken($color-link, 20);}

    img { border: none; }
  }

  // Some basics for formattedContent

  .formattedContent {
    p {
      margin-block-start: 1rem;
      margin-block-end: 1rem;
    }
  }

  // CORE

  .hide { display: none !important; }

  .fullWidth {
    width: 100%;
    box-sizing: border-box;
  }

  .fullHeight {
    height: 100%;
    box-sizing: border-box;
  }


  @mixin rowSpacing($amount) {
    &>* { margin-left: $amount; }
    &>*:first-child { margin-left: 0; }
    &.wrap {
      &>* { margin-left: 0; margin-right: $amount; margin-bottom: $amount; }
      &>*:last-child { margin-left: 0; margin-right: 0; }  
    }
  }

  @mixin columnSpacing($amount) {
    &>* { margin-top: $amount; }
    &>*:first-child { margin-top: 0; }
    &.wrap {
      &>* { margin-top: 0; margin-bottom: $amount; margin-right: $amount; }
      &>*:last-child { margin-top: 0; margin-bottom: 0; }  
    }
  }

  .row {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-wrap: nowrap;

    &.spacing1 { @include rowSpacing(1px); }
    &.spacing5 { @include rowSpacing(5px); }
    &.spacing10 { @include rowSpacing(10px); }
    &.spacing15 { @include rowSpacing(15px); }
    &.spacing20 { @include rowSpacing(20px); }
    &.spacing25 { @include rowSpacing(25px); }
    &.spacing30 { @include rowSpacing(30px); }

    & > .fullWidth {
      flex-grow: 1;
      width: unset;
    }

    & > .fullHeight {
      align-self: stretch;
      height: unset;
    }
  }

  .column {
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    &.spacing1 { @include columnSpacing(1px); }
    &.spacing5 { @include columnSpacing(5px); }
    &.spacing10 { @include columnSpacing(10px); }
    &.spacing15 { @include columnSpacing(15px); }
    &.spacing20 { @include columnSpacing(20px); }
    &.spacing25 { @include columnSpacing(25px); }
    &.spacing30 { @include columnSpacing(30px); }

    & > .fullWidth {
      align-self: stretch;
      width: unset;
    }

    & > .fullHeight {
      flex-grow: 1;
      height: unset;
    }
  }

  .row, .column {

    &.wrap {
      flex-wrap: wrap
    }

    & > * {
      flex-shrink: 0;
      position: relative;
    }
  }

  .el {
    display: flex;
    flex-direction: column;
    align-items: flex-start;

    & > .fullWidth {
      align-self: stretch;
      width: unset;
      max-width: 100%;
    }

    & > .fullHeight {
      flex-grow: 1;
      height: unset;
      max-height: 100%;
    }
  }

  .screen {
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
  }

  .grid {
    display: grid;
  }

  // This is for old IE compatibility without grid support
  .grid > div > div.el > * { max-width: 100%; }

  .selectionHandle {
    opacity: 0.2;
    cursor: move;
    &:hover {
      opacity: 0.5;
    }
  }

  input, textarea {
    padding: 5px;
    border-radius: 5px;
    border: 1px solid $color-dark;
    &:focus {
      box-shadow: 0 0 0 0.2rem transparentize($color-primary,0.7);
      border: 1px solid $color-dark;
      outline: none;
    }
  }

  img.lazyload {
    background: url('images/spinner.gif') no-repeat center;
  }

  .spinner {
    background: url('images/spinner.gif') no-repeat center;
    width: 16px;
    height: 16px;
  }

  .spinner_40x60 {
    background: url('images/spinner_40x60.gif') no-repeat center;
    width: 40px;
    height: 40px;
  }

  .iiif_logo {
    background: url('images/logo-iiif-small.png') no-repeat center;
    background-size: contain;
    width: 34px;
    height: 30px;
  }
}